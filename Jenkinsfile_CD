pipeline {
    agent {
        label 'ubuntu22_04'
    }

    parameters {
        // booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Select the action to perform')
        // choice(name: 'dockerImage', choices: ['marinaimeninnik/spring-framework-petclinic:latest'], description: 'Docker image to deploy')
        choice(name: 'environment', choices: ['dev', 'qa'], description: 'Select environment for deployment')

    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_access_key')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_secret_key')
        AWS_DEFAULT_REGION    = 'eu-central-1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/marinaimeninnik/spring-framework-petclinic.git'
            }
        }
        stage('Terraform init') {
            steps {
                script {
                    dir('terraform/dev'){
                        sh 'terraform init -migrate-state'}
                    }
            }
        }
        
        stage ('Terraform action') {
            steps {
                script {
                    if (params.environment == 'dev') {
                        dir('terraform/dev'){
                            echo "Terraform action from the parameter is ${action}"
                            sh "terraform ${action} -auto-approve"
                            }
                        }
                    else if (params.environment == 'qa') {
                        dir('terraform/qa'){
                            echo "Terraform action from the parameter is ${action}"
                            sh "terraform ${action} -auto-approve"
                            }
                        }
                    }
                }
            }
        }
    }
// }